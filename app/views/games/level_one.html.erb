 


<script type="text/javascript">



var game = new Phaser.Game(860, 600, Phaser.AUTO, 'game-container', { preload: preload, create: create, update: update });

function preload() {
	game.load.image('background', '/images/Bedroom_1.jpg');
	game.load.image('blank_line', '/images/blank_line.png');
	game.load.image('purp_line', '/images/purp_line.png');
    game.load.spritesheet('user', '/images/hotdogsprite.png', 49, 100);
    game.load.spritesheet('coin', '/images/redgacoin.png', 273.29, 300);
}

function create() {
	game.physics.startSystem(Phaser.Physics.ARCADE);
	game.scale.fullScreenScaleMode = Phaser.ScaleManager.EXACT_FIT;
    game.input.onDown.add(gofull, this);
	
	// inserting background image
	background = game.add.image(0, 0, 'background');
	background.height = game.height;
    background.width = game.width;
    
    
    

    // creating platform group to contain the floor
    platforms = game.add.group();
    //  We will enable physics for any object that is created in this group
  	platforms.enableBody = true;
  	
    // creating the floor for the game
   var ground = platforms.create(0, game.world.height -30, 'blank_line');
   game.physics.arcade.enable(ground);
   ground.scale.setTo(200, 2);
   ground.body.immovable = true;

// this is the ledge at the top left dresser with coin on it
    ledge_1 = platforms.create(172, 153, 'purp_line');
    ledge_1.scale.setTo(2.5, 1);
    ledge_1.body.immovable = true;
    // ledge_1.collideDown = true;
    

    // this is the ledge for the bed
   	ledge_2 = platforms.create(425, 400, 'purp_line');
   	ledge_2.scale.setTo(3.5, 1);
    ledge_2.body.immovable = true;
    platforms.collideLeft = false;
	platforms.collideRight = false;
	platforms.collideUp = true;
	platforms.collideDown = false;
	platforms.faceUp = true;
	platforms.faceDown = false;
	platforms.faceLeft = false;
	platforms.faceRight = false;
    // ledge_2.collideDown = true;
   
    
    



   // bring character into the game
   	player = game.add.sprite(1, game.world.height - 150, 'user');
	 //  We need to enable physics on the player
	    game.physics.arcade.enable(player);
		 //  Player physics properties. Give the little guy a slight bounce.
	    player.body.bounce.y= 0.2;
	    player.body.gravity.y = 300;
	    player.body.collideWorldBounds = true;
	 
	    //  Our two animations, walking left and right.
	    player.animations.add('left', [1, 2, 3, 4, 5, 6, 7, 8], 10, true);
	    player.animations.add('right', [11,12,13, 14, 15, 14, 13, 12], 6, true);
	    // player.animations.add('jumpLeft', [14], 3, true);
	    // player.animations.add('jumpRight', [26], 3, true);

	coin = game.add.sprite(200, -600, 'coin');
		game.physics.arcade.enable(coin);
		 //  Player physics properties. Give the little guy a slight bounce.
	    coin.scale.x = game.rnd.realInRange(.28, .28);
  		coin.scale.y = game.rnd.realInRange(.28, .28);
	    coin.body.bounce.y= 0.2;
	    coin.body.gravity.y = 300;
	    coin.body.collideWorldBounds = true;
	    coin.animations.add('spin', [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10, true);
	
}


function update() {
	game.physics.arcade.collide(player, platforms);
	game.physics.arcade.collide(coin, platforms);
	
	

	// this is where player movement starts 
	cursors = game.input.keyboard.createCursorKeys();
	
    //  Reset the players velocity (movement)
   	player.body.velocity.x = 0;

    if (cursors.left.isDown)
    {
        //  Move to the left
        player.body.velocity.x = -250;

        player.animations.play('left');
    }
    else if (cursors.right.isDown)
    {
        //  Move to the right
        player.body.velocity.x = 250;

        player.animations.play('right');
    }
    else
    {
        //  Stand still
        player.animations.stop();

        player.frame = 1;
    }

    //  Allow the player to jump if they are touching the ground.
    if (cursors.up.isDown && player.body.touching.down)
    {
        player.body.velocity.y = -350;
    }


    // coin animation
	coin.animations.play('spin');

}




function gofull() {

    if (game.scale.isFullScreen)
    {
        game.scale.stopFullScreen();
    }
    else
    {
        game.scale.startFullScreen(false);
    }

}


</script>
<!-- <div class = "game-container">
</div> -->


